@model TestingSystem.WEB.Models.Tests.QuestionViewModel

@{
    ViewBag.Title = "Edit question";
    int count = 0;
}

<br />

<div class="container col-md-8 pl-0 ml-0">

    <div class="card">
        @using (Html.BeginForm("Edit", "Question"))
        {
            @Html.AntiForgeryToken()
            <div class="card-header">
                <h4 style="font-weight: bold;">Edit question</h4>
            </div>
            <div class="card-body">


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <label style="font-weight: bold; padding-bottom: 10px">
                        @Html.DisplayNameFor(model => model.QuestionContent)
                    </label>

                    @Html.TextBoxFor(model => model.QuestionContent, new { @class = "form-control", style = "max-width: 800px" })
                    @Html.ValidationMessageFor(model => model.QuestionContent, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <div style="font-weight: bold; padding-bottom: 10px">
                        @Html.DisplayNameFor(model => model.Point)
                    </div>
                    @Html.EditorFor(model => model.Point, new { htmlAttributes = new { @class = "form-control", style = "max-width: 800px" } })
                    @Html.ValidationMessageFor(model => model.Point, "", new { @class = "text-danger" })
                </div>


                @if (Model.Answers.Count > 0)
                {
                    <table class="table table-sm table-bordered table-dark table-hover">
                        <thead class="bg-primary">
                            <tr class="text-center">
                                <th scope="col" style="width: 34px">#</th>
                                <th scope="col" style="width: 94px">IsTrue</th>
                                <th scope="col" width="65%">Answer</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>

                        <tbody>

                            @for (int i = 0; i < Model.Answers.Count; i++)
                            {
                                count++;

                                @Html.HiddenFor(m => Model.Answers[i].Id, Model.Answers[i].Id)
                                @Html.HiddenFor(m => Model.Answers[i].QuestionId, Model.Answers[i].QuestionId)
                                <tr>
                                    <td class="text-center align-middle" style="width: 34px">@count</td>

                                    <td class="text-center align-middle" style="width: 94px">
                                        @Html.EditorFor(model => Model.Answers[i].IsTrue, new { htmlAttributes = new { @class = "form-control", style = "" } })
                                    </td>
                                    <td width="65%">
                                        @Html.TextAreaFor(modelItem => Model.Answers[i].AnswerContent, new { @class = "form-control text-white bg-dark", style = "font-size: small; font-weight: bold; max-width:800px; max-height: 80px;min-height: 80px;" })
                                    </td>


                                    <td class="text-center align-middle">
                                        @Html.ActionLink("Delete", "DeleteAnswer", "Question", new { answerId = Model.Answers[i].Id }, new { @class = "btn-sm btn-sm btn-danger" })
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                @Html.Partial("_AnswerTargetResult", new ViewDataDictionary { { "countId", count } })

            </div>

            <input data-val="true" name="id" type="hidden" value="@Model.Id">
            <input data-val="true" name="testId" type="hidden" value="@Model.TestId">

            <div class="col-lg-auto pb-2">
                <button type="submit" value="Save" class="btn btn-success">Save</button>
            </div>
        }

        <div class="form-inline col-lg-auto pb-2">
            <div class="form-inline ">
                @using (Ajax.BeginForm("AddAnswer", "Question", new AjaxOptions
                {
                    HttpMethod = "Post",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "newAnswer",
                    LoadingElementId = "loading",
                    //LoadingElementDuration = 10000
                }))
                {
                    <input data-val="true" name="id" type="hidden" value="@Model.Id">
                    <input data-val="true" name="testId" type="hidden" value="@Model.TestId">

                    <input name="count" id="count" type="hidden" value="@count">
                    <button class="btn btn-primary" type="submit">Add answer </button>
                }
            </div>
        </div>
        <div class="col-lg-auto pb-2">
            @Html.ActionLink("Back to test", "Details", "Test", new { id = Model.TestId }, new { @class = "btn btn-outline-info", role = "button" })
        </div>
    </div>

    <div class="card-footer">
    </div>
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
}
